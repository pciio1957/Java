

#Database 처리 실무 프로세스
1. 요구사항 정의서 작성 후 여러사람이 공유하고 
	영구적으로 관리할 데이터에 대한 식별을 함
	속성을 만들고 속성의 그룹 단위를 만들어 테이블을 구성한다. 
	ex) 로그인을 한다 -> 회원관리를 한다 -> 회원이 등록할 정보가 있다는 것
		-> 회원에 들어갈 속성을 만들고 -> 속성을 함께 가지고 있을 테이블을 구성함
		- 속성 : 아이디, 패스워드, 이름, 주소, 이메일, 포인트, 권한
		
		= 관련 자료 검토, 엑셀 검토
		= 고객과의 대화
	1) 처리단계
		- 요구사항 정의서
		- 영구적데이터/임시데이터 식별, 속성도출 및 속성을 그룹화하여 테이블 구성
		- 테이블간의 연관관계를 설정(관계데이터 모델링)
			exerd(erd 모델링도구/툴)
		- sql 작성
		- 프로그래밍 적용 처리 
		
2. 속성과 이들 그룹단위로 테이블을 만들고, 적절한 데이터 유형(데이터 타입에 따라 테이블을 생성한다) 
	ex) 
	create table member {
		id varchar2(50), 
		-- id라는 이름으로 50개의 문자가 가변적으로 들어갈 수 있게 속성 정의
		pass varchar2(20),
		name varchar2(50),
		address varchar2(500),
		email varchar2(100),
		civilcode char(13), -- 13의 고정형 문자 주민등록번호, 학번
		point number, --숫자형 데이터
		auth varchar2(50)
	);
	
	-- 이번조별과제는 여기까지 만들면 됨 
	
3. erd를 통해 테이블과 테이블의 연관관계를 설정하고 
	(테이블 설계 - 속성, 연관관계 설정)
	sql로 join 처리 (subquery 포함)
	
4. 화면별로 필요한 sql 사용
	1) 조회(DQL)
	2) 등록(DML)
	3) 수정(DML)
	4) 삭제(DML)

5. 프로그램에서 dao로 데이터베이스 연결 객체를 처리하여 DB 서버에서 데이터를 
	 가져오게 한 후 화면단에 출력 처리한다. 
	1) 화면을 통해 입력된 값 
	2) 서버에서 만들 데이터를 객체 형태로 화면에 출력 처리

#전체적인 knowledage Map (엑스마인드맵(pc,앱) 설치해서 지금까지 한거 정리하기)
1. database의 개론

2. sql
	1) select 리스트 부분
		연산자 처리
	2) where 조건문
	3) 함수 - 리스트문, 조건문
		단일함수 : 문자, 숫자, 날짜 기타 가능함수
		그룹함수 : 그룹함수 
			목적 : 데이터의 그룹별로 처리하는 목적
			ex1) 부서번호별 최고급여, 직책별 최저급여, 월별 평균급여
				
			그룹되는 컬럼이 없으면, 해당 테이블의 전체 데이터를 기준으로 가져온다
			select max(sal), min(sal), max(hiredate)
			from emp; 
			** 해당 테이블의 전체 데이터 기준으로 함수 적영
			
			select to_char(hiredate, 'MM'), max(sal)
			from emp
			group by to_char(hiredate, 'MM')
			having max(sal)>2000;
			** 그룹함수를 기준으로 조건데이터를 처리할 때 having 활용 
			
			ex2) 그룹함수를 이용한 subquery (where, update) 
			
	4) 테이블과 테이블의 조인관계
		-join문 : 여러 테이블과 조인을 처리하는 형식 
			select 테이블1.컬럼.., 테이블2.컬럼... 
			from 테이블1  alias1, 테이블2 alias2 ...
			where 테이블1.컬럼 = 테이블2.컬럼 
			
		-subquery : 
			select 컬럼, ... (select max(컬럼) from 테이블) 
			(간편하게 사용할 때 하는거라서 쓰는 것은 자제해야한다고 함)
			from (select 컬럼 from 테이블) a, 
				(select 컬럼 from 테이블) b, 
				...  -- 이때 테이블만 넣는게 아니라 특정쿼리를 넣을수도 있음
			where 조건 in (select min(컬럼) from 테이블명)
				and (열1, 열2) in (select 다중열1, 다중열2) 
				and (열1, 열2, 열..) = (selece 다중열)
		
	# 기본 구문 형식(DQL)
	select 컬럼 
	from 테이블명
	where 조건명
	group by 그룹할 컬럼
	having 그룹함수로 조건처리
	order by 컬럼 [desc];
		
3. sql
	1) sql의 종류 
		DML : 데이터의 조작
		DDL : 데이터의 정의 (객체 생성시 사용- sequence 등..)
		DCL : 데이터의 제어 
		- CRUD : Create(insert) Read(select) Update Delete
		
	2) 명령어	
		1) insert
			insert 테이블명(컬럼명1, 컬럼명2..) values(순서에 맞는 데이터1, 데이터2..);
		2) update
			update 테이블명 set 변경할컬럼1=변경할데이터1, 변경할컬럼2=변경할데이터2 ... 
			where 조건;
			ex) update emp set ename = '홍길동', deptno=20 
				where empno = 7780; 
				
			#subquery 활용
			update 테이블 a 
			(못들었음.. 0705 1교시 다시 듣기) 
			
		3) delete
			데이터를 row(행)단위로 삭제 처리 
				(특정한 컬럼만삭제할 수 없다, 이때는 update 테이블 set 컬럼 = null;)
			delete from 테이블명 where 조건; 
			(주의) 열단위로 하는게 아니라서 delete 다음에 뭐 없음, 행 지정X
			ex) delete from emp where empno = 7999; 
			
			-> insert, update, delete 구분을 처리한 후 
				트랜잭션 제어 rollback(복구&수행명령 취소), commit(확정)를 처리한다. 
				
				트랜잭션 제어(세션처리)란? : 서버의 안정성을 위함 
					client1 -> 서버 <- client2 
				1차적으로 들어가진 않음, commit을 해야 클라이언트2가 확인할 수 있음
				
				ex) clien1이 데이터 입력한 내용은 접속한 client2에 초기에는
					반영이 되지 않는다. client1이 입력 후 commit을 처리했을 때
					모든 client에 입력한 내용을 확인할 수 있다. 
					이것을 트랜잭션 제어라고 하며 이것을 통해서 데이터의 안정성을 유지할 수 있다.
				
				ex) 신입이 보통하는 실수,,
				delete from 테이블 where 조건X; -> 조건을 생략하면 다 날아가버림 ㅎ
				
				
		4) create table 테이블 {}
			create table 테이블{ 
				컬럼명1 데이터유형 제약조건,
				....
			}
		
			#많이 쓰이는 데이터 유형 
			숫자형 number(n, p), 고정문자 char, 가변문자 varchar2, 날짜형 date 
			
		5) 테이블 구조 수정/삭제
			alter 테이블명
				add 추가할 컬럼 데이터유형
				modify ...
				rename ... 
				
		6) 여러가지 객체 sequence, trigger, role
			sequence는 primary key의 넘버링 시 쓰이는 경우가 있음 
			ex) create sequence emp_seq 
					start with 시작할 데이터
					minvalue 최소값
					maxvalue 최대값
					incremetn by 증가값;
			
		7) 제약조건 : primary key(not null, uniquery), foreign key, 
				not null, unique, check(특정 조건만 입력하게) 
			- emp 테이블 <- dept 테이블 : 연관이 있다..
			
			ex) not null의 경우 입력이 안되면 오류발생
			데이터의 입력이나 수정시 해당 제약조건에 맞지 않으면 에러를
			발생하게 하여 데이터의 무결성을 유지하게 할 수 있다. 
			

-- 실질적으로 제약조건까지가 현업에서 많이 사용하는 범위임
4. sql(사용자 권한 부여 및 회수)
	계정을 만들고, 해당 계정에 따라서 권한 부여를 처리하는 것을 말한다. 
	1) grant : 권한 부여
	2) revoke : 권한 회수
	3) role : 특정한 권한을 모아서 role을 지정하여 처리

5. pl/sql 
	프로그래밍으로 sql을 사용
	
6. DB 설계
	스키마도출 : 속성 처리
	테이블 관계 설정 : 두개 이상의 테이블을 구성하여 테이블을 나누어
		관계 설정처리 
	ex) 사원정보 테이블에서 부서명이 변경되었을 때
	부서 테이블을 나누는 것이 효율적일까? 통합된 테이블이 효율적일까?
	
7. 그룹 데이터 처리
	union, union all, minus
	ex) 조회 sql1 union 조회sql2 : 
		두 조회구문의 중복을 뺀 통합 결과출력(집합의 합)
		ex) select empno 

8. 계층적 sql
	oracle DB에서 지원하는 계층적 sql 처리
	start with
	prior
	siblings
	ex) 무한 레벨의 답변형 게시판 
		
#DB과제
1. 수업시간 : 응용 sql 위주
2. 조별과제 :
	1) DB 설계 
		- 테이블 도출
		- 관계 도출
		- 그 외 기타 객체 도출 (요구사항 분석, java 모듈 구현)
	2) 계정 생성 및 권한 부여
	3) 화면별 sql 도출 (화면 구현시) 
	4) jsp 진도가 다 나가고 끝난 후에는 프로그램과 연동처리 (sql 처리)