
/*
#정리문제
1. 함수란 무엇이며, 함수에 단일행 함수와 다중행 함수의 차이점을 예시를 통해서 설명하세요.
2. 문자 함수가 사용되는 용도에서 웹화면에 물품명을 대소문자 관련없이 검색한다고 가정할 때,
    product(테이블명), pname(검색할 물건명) 을 기준으로 sql을 작성하세요.
     물건명 [      ] [검색] 검색클릭시, 대소문자 관련 없이 키워드 검색이 되게 처리할려면
     어떤 sql를 작성할지 기술하세요.
3. length와 lengthb를 차이를 기술하고,  dual을 이용해서 한글과 영문을 비교하세요.
4. ||, substr  이용하여  [ename(deptno)의 직책은 job 입니다. ] 형식으로 출력하세요.   
    ename : 앞에서 3자 추출
    job :뒤에서 5자 추출
5. lpad와 ltrim의 기본적인 형식을 기본예제와 함께 기술하세요.
6. 숫자형 함수의 종류와 기능상 특징을 기술하세요.
7. 사원 번호의 3으로 나누어 %로 해서, 0 ==> 0%, 1 ==>10%, 2==>20%
   보너스를 정하여, sal기준으로 원금+보너스 합산을 출력하되,
   10자리단위로 반올림 처리하여 출력하세요
   사원명, 급여, 보너스(%), 보너스, 총계
8. 관리자 번호가 짝수인 사번과 관리자 번호와 급여를 출력하되, 급여는 100자리 수로 절삭하여 처리하세요.

*/


-- 1. 
/*
1. 함수란 
	1) 컬럼의 값이나 데이터 타입이 변경하는 경우, 
	2) 숫자 또는 날짜 데이터의 출력 형식이 변경되거나 
	3) 하나 이상 행에 대한 집계를 하는 경우에 사용될 수 있다.
	sql에서는 주로 내장함수를 이용한다. 
*/
-- 2. 단일행과 다중행 함수의 차이점 
-- 단일행 함수의 경우 하나의 행마다 적용되는 함수이고, 
SELECT upper(ename)
FROM emp; 

-- 다중행 함수의 경우 여러 행에 적용해서 하나의 결과를 출력하는 함수이다. 
SELECT max(deptno)
FROM emp;


-- 2. 
-- 대소문자 관련없이 검색했을때 테이블의 데이터와 검색 데이터를 모두 
-- 대문자로 바꿔버리거나 소문자로 바꿔버리면 검색이 쉽다
SELECT *
FROM  product
WHERE upper(pname) LIKE '%' || upper(pname) || '%';


-- 3. 
-- 1) length(데이터나 컬럼명) : 입력되는 문자열의 길이를 반환한다
-- 2) lengthb(데이터나 컬럼명) : 입력되는 문자열의 바이트를 반환한다.
-- 영어를 사용했을때는 두개의 결과가 같지만 한글의 경우 3byte를 적용하므로 결과가 다름
SELECT length('goodjob') a1, lengthb('goodjob') a2, 
	length('굿잡') a3, lengthb('굿잡') a4
FROM dual;


-- 4.
SELECT substr(ename, 1, 3) || '(' || substr(job, 3, 5) || 
	')의 직책은 ' || job || '입니다'
FROM emp;


--5. 
-- lpad(데이터나 칼럼명, 총 문자갯수, 채울 갯수) : 총 문자갯수 중 데이터가 할당되지 않는 부분에 문자를 채운다.
-- ltrim(데이터나 칼럼명, 자를 문자) : 지정한 문자를 해당 데이터나 칼럼내용에서 잘라낸다.
SELECT lpad(ename, 8, '*') b1, 
	ltrim(ename, 'S') b2
FROM emp;


-- 6. 
/*
#숫자형 함수
1. 특징 : 숫자형 데이터를 이용한 다양한 함수 처리가 가능하다.. 
2. 종류 
	1) round(데이터, 자릿수) : 지정한 소숫점 자리로 반올림 처리
	2) trunc(데이터, 자릿수) : 지정한 소숫점 자리까지 남기고 절삭
	3) mod(데이터, m) : 데이터를 m으로 나눈 나머지값
	4) ceil : 지정한 값보다 큰 수 중에서 가장 작은 정수
	5) floor : 지정한 값보다 작은 수 중에서 가장 큰 정수 
*/


-- 7. 
SELECT ename AS 사원명, sal AS 급여, 
	deptno AS 보너스퍼센트, sal*MOD(deptno,3)/10 AS 보너스,
	sal+(sal*MOD(deptno,3)/10) AS 총계
FROM emp;


-- 8.
SELECT empno, trunc(sal, -3)
FROM emp
WHERE mod(mgr, 2) = 0;